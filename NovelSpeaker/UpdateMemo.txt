お願い：
βテストを行った後、問題が発見されなかった時でも「報告を入れてください」そうしないとまだテスト中なのか、問題がなかったのかを判断できず、延々と不都合の有無の報告を待ち続ける事になってしまいます。

補足：
βテストが終了した後(AppStore側に同じバージョンのものがリリースされた後)は、AppStore アプリ から ことせかい をダウンロードし直しておくことをおすすめしておきます。
過去の更新履歴は https://raw.githubusercontent.com/limura/NovelSpeaker/master/NovelSpeaker/UpdateMemo.txt から読めます。

ことせかい 更新履歴

Version 2.0.0 (2.0.0)
TODO: DarkMode, pitch等に数値表示, 目次を検索ボタンへ変更, 携帯電話網を使わない設定
- 内部データベースを CoreData から Realm に変更
  ほぼ全ての動作が影響を受けます。初回起動時にデータベースの中身をRealm側に書き換える処理が走ります。これは保存されている小説の数が多いなどの場合にはかなり時間がかかりますので我慢してお待ち下さい(途中で閉じたり強制終了させられると次回起動時に最初からやり直しになるはずです)。
  色々と動作が怪しくなったりしそうな気がすごくしますので、少しでも変だなーと思った事がありましたら教えてください。
- ほぼ全てのViewController(画面)をObjective-CからSwiftに書き換え
  見た目が変わった部分だけでなく、見た目が変わっていない部分についても変更が加えられているため、以前と同じ動作をしない場合があります。意図的に変えた所などもあるのですが、対応が抜けている部分も多いかと思います。気になる部分がありましたら教えてください。
- なろう検索 タブの機能を削除
  かねてからの予告通り なろう検索 タブの機能を削除しました。
- 色々な所で Dynamic Type に対応しようとした
  設定アプリ → 一般 → アクセシビリティ → さらに大きな文字 の下部で設定できる文字の大きさを変えると ことせかい 側でも文字のサイズが変わります。
  色々と抜けがあると思うので、発見した方はこっそり教えて頂けると嬉しいです。(なお PickerView や DatePickerView 等のドラムを回転させる感じの選択する奴は対応が面倒くさいので対応していませんのでそれについては報告不要です(´・ω・`)
- 本文中の長押しメニューに「読み替え後の文字列を確認する」と「この小説用の読み替え辞書へ登録」を追加
- ダウンロード周りの動作を変更
   今までは一度に一つのダウンロードしか走らなかったのを、別のホスト(サイト)であれば並列にダウンロードされるように変更しました。加えてダウンロード中の表示を少し変えました。(実際にダウンロードが走っている小説だけ、インジケータがくるくる回って、ダウンロードqueueに入っているけれどまだダウンロードが開始されていないものはインジケータが出るだけになっています)
  一つの小説サイト(例えば 小説家になろう様 など)からしかダウンロードされていないような人には効果がありませんが、複数のWebサイトの小説を本棚に登録している人の場合は全体の再ダウンロードをした時に早めに終わるようになると思います。
  また、ダウンロードを試みる順番を、最近更新されている(新しい章がダウンロードできた)頻度が高い小説から優先して先にダウンロードを試みるようにしました。
  全ての小説の更新確認を行おうとした時により早い段階で更新頻度の高い小説が更新されるようになるはずです。
- 話者関係の設定項目を変更
  今までは 設定 → 声質の設定 で行っていたものが、設定 → 話者・声色設定 と、設定 → 話者変更設定 に分割されました。
  話者・声色設定 では話者とその声色(ピッチ)の設定をして、そこで設定した話者と声色の設定を、話者変更設定 で使うようになっています。
  将来的には小説ごとに話者変更設定を変えられるようにしようかなぁと思ってこのような形になりました。
  オマケ的に、話者で外国語話者を選べたり、違う話者を混ぜて設定(本文は O-ren で会話文は Otoya とか)もできるようになったのですが、話者が変わるタイミングで結構待たされちゃうので、このオマケはあんまり意味はなかったかもしれないですね。(´・ω・`)
- テキストファイル等の取込時にテキトーに章を分ける機能を追加
  シェアボタンから「ことせかい へコピー」で取り込ませる時に、「改行が3連続」であるとか「[[改ページ]]」という文字列があるであるといったテキストであった場合には、その位置を章の分割点としてみなして一つの章ではなく複数の章として読み取るためのボタンを表示するように
  青空文庫で使われている[#改ページ]等も分割点としてみなすようにしたので、青空文庫から取り込む場合に良いかもしれません。
- 小説毎の専用設定の概念を追加(小説本文表示部右上に「詳細」メニューを追加)
  - 読みの修正に、個々の小説毎に専用の読みの修正を登録できるような仕組みを導入
    読みの修正詳細画面に「適用対象」が追加され、それを選択した先で対象の小説のみにチェックを入れる事で、その小説専用の読みの修正を定義することができます。
  - 話者の指定
  - タグの確認・編集
- 小説本文表示部右上に「目次」ボタンを追加
  サブタイトルが取得できている場合にはそれを表示しますが、サブタイトルが取得できていない場合は一番最初の行をサブタイトルとして表示します。
- 本棚の順番(ソート)対象をいくつか追加
  自作フォルダについては 小説本文画面 → 詳細 → フォルダへ分類 から、フォルダを追加する事で分類を行うようになっているのですが、もうちょっと「良い感じ」のインタフェースにしたいですね。
- お気に入り(スター？)状態を追加
  本棚のそれぞれの小説の左側の星マークの辺りを押すか、小説本文画面 → 詳細 → お気に入り を押す事で ON/OFF できるようになります。
  小説をお気に入りにすると、本棚での削除ができなくなるのと一括ダウンロード時にダウンロードを試みる順番が早くなりやすくなるボーナスがつきます。

Version 1.1.56 (1.1.120)
- 日本語環境下においてアプリ名が ことせかい ではなく NovelSpeaker になっていたのを ことせかい になるように修正

Version 1.1.56 (1.1.119)
- Dark Mode へ対応してみました。恐らく抜けがあると思うのですが、対応範囲が広すぎるので、対応漏れがあると思います。ダークモードにしたりダークモードを解除した後に ことせかい をテキトーに色々と弄ってみて、黒地に白で描画されていない部分があったりしたら教えて下さい。
  なお、Web取込タブのWebページ部分に関しては Webページ と同じ扱いのため、ダークモード下でも白地に青等の表示になります。(最初に開いているページもWebページなので白地に青の表示になります)
- 小説本文を表示している画面に、検索用のボタンを追加
  その小説の本文から指定された文字列を検索して、その文字列が含まれている章を選択できるようになります。
  副次的な要素として、検索文字列を何も入れずに検索をさせると、全ての章がリストされます。
  ボタンを追加しすぎでそろそろ iPhone SE 位の横幅が狭い端末だと小説名が読めなくなってきました。ハンバーガーメニュー的な物に逃がすべきでしょうか…… 私あんまり好きじゃないんですよねアレ。目的のボタンがどこにあるのかわからなくなってしまうので。
  「機能」ボタンみたいな「何かそれっぽい機能を呼び出すためのボタンがあるな、これを押したら検索くらいできないかな？」と推測できるようなボタン名のものに纏めちゃうとかですかね……うーん……？
- 設定 -> 声質の設定 にて、スライドバーの値を表示するようにしました
- 設定 -> 携帯電話網ではダウンロードしないようにする の ON/OFF 設定を追加しました

Version 1.1.55 (1.1.118)
- 自作小説を編集中に章の削除をしようとした時に、その削除した章が栞のはさまれた章だった場合にその章が削除されなかった問題を修正
  これは結構ややこしい問題でした。再現しようとすると、
  1. 新規自作小説を作る。内容な何でも良いので3章分作成して右上の「登録」を押して確定させる
  2. 本棚に戻り、1. で作成した小説を開いて3章目まで移動してから、右上の「編集」を押して編集モードへ
  3. 編集モードで3章目が表示されているのを確認して、右上の「この章を削除」する
  4. 読み上げ画面に戻った時に、栞の位置の章が消えている(それまで開いていた章が消えている)ので1章目に戻されるので、3章目まで移動する
  と、やろうとすると、昔のバージョンでは3章目が表示できていました。これが発生すると、保存されている章の実体は減っていないけれど、最後の章だと思っている章の番号が一つ減った状態になるため、色々とおかしな動きをするようになっていました。

Version 1.1.55 (1.1.117)
- 画面の遷移が起きる時やシェアボタンを押した時などで、presentViewController:animated:completion を呼んでいる場面では modalPresentationStyle を FullScreen と指定するように
  iOS 13用 にビルドするとその値を指定していない場合は別の値として動いてしまう(今までは FullScreen として動作していた)らしいので、先回りして FullScreen に強制しておきます。
- メッセージダイアログが出る部分でのメッセージ部分の高さ設定を短めにしました。
  iPhone 5s 等の小さい端末だと「OK」が押しにくい(又は押せない)場合があったため。
  設定 -> お知らせ や 設定 -> ことせかい利用許諾、設定 -> ことせかい のプライバシーポリシーを確認する 等がそれに当たります。(バージョンアップ時の物は変えていないため、場合によってはOKが押せないかもしれませんが、こちらは現在別の枝で作っている Version 2 以降で対応したいです……)
- Web取込 で取り込んだ小説については、編集から章の削除ができないように
  これが削除できてしまうと誤動作を誘発するというか、章を削除すると再度ダウンロードしたらその削除した章を読み込んでくれると思われるのが普通かと思うのですが、再度ダウンロードしてもその削除した章は読み込まれず、最後にダウンロードした章の次の章が読み込まれてしまうため、誤動作に見える、という事になっているため、削除はできないようにしました。

Version 1.1.55 (1.1.116)
- 読み込んだ章の最初と最後の空白や改行部分を削除するように
  今までは最初と最後の空白部分は削除していなかったのですが、それらが残っている意味はほぼ無いというのと、最後に多量の空白部分があると読み終わったチェックに引っかからなくなる事がある(読み終わったかどうかを判断するのは読み上げ位置が最後から10文字以内に入っている必要があるので、空白や改行が10文字以上ある場合には読み終わった事にならない場合があった)ので、いっそのこと消すようにしました。
- 「設定」→「再ダウンロード用データの生成」のタイトルを「バックアップ用データの生成」に変更
  新しい iPhone が出る時期になると、「ことせかい の内容をバックアップしたい」というお問い合わせや新機能のご提案がちらほら舞い込んできますので、多分「再ダウンロード用データ」というよくわからないものより「バックアップ用データ」という文言の方がわかりやすいのかなぁと言うことで変更してみます。

Version 1.1.54 (1.1.115)
- 新しい告知があった場合に 設定タブ にバッジがついたりして確認を促すように
  ユーザ全員向けの情報が追加された時に、今までは「設定」->「開発者に問い合わせる」を開いた時や、サポートサイトを開いて少し待ったりしないとその情報が表示されなかったのを、新しい情報が出てきた場合には設定タブにバッジがついて、「設定」->「お知らせ」(一番上に新設しました)の部分に「！」がついて押してほしい感じで目立つようにしました。
  これは、今回のような(「設定」->「iOS12で読み上げ中の読み上げ位置表示がおかしくなる場合への暫定的対応を適用する」がONになっていると空白等を「あるふぁ」と読み上げてしまうという『不都合』が出たのでなんとかして欲しいというお問い合わせがAppStoreのレビュー欄に届き続けている)問題について、サポートサイト下部のご意見ご要望フォームやアプリ内の「設定」->「開発者に問い合わせる」から問い合わせようとした時にしかこの告知が見られないのが問題で、いきなりあAppStoreのレビュー欄に要望を書いてしまう文化の人に、この告知をどう届ければ良いかなぁという事で実装した感じです。起動時にダイアログで出してもいいかと一瞬試してみたんですが起動後に読み上げを開始するまでに1タップ増えてしまうのがどうにも許せなかったのでバッジをつけて確認しようと思った人だけが確認できるようにすることにしました。ただこの場合、確認しようと思わない人(どうやら「設定」の項目自体をほぼ全く触らない(実際最初に少し弄れば後は放置でいいんですよね設定タブは)人は結構居そうです)には効かないのであんまし良くない対策かもしれないんですよね。それでもまぁ、気になって押す人は居て、お問い合わせもそれに釣られて減るといいなぁと思っています。
  後は、設定タブのバッジは目立つけれど、その告知を見られる「設定」->「お知らせ」につく「！」マークが目立たないというのが気になっているんですがこのLabelにはバッジってつけにくいんですよねどうしたものか。
- 設定->小説を読む時に背景を暗くする の動作を少し変更
  今まではこの設定が OFF の時でも色の設定を白い背景のテーマで上書きしていたのですが、これをしないようにしました。
  これは、iOS 13 になった時に iOS の設定側？で？ダークテーマを選択しているとどうなるのかわからないのですが、全てのアプリの標準の色設定がダークテーマぽい色設定になるような事になったとすると、白い背景のテーマで上書きしてしまう動作が良くないことを生みそうだなぁと思ったのでとりあえずの回避策です。必要なさそうな気もしますが。

Version 1.1.53 (1.1.114)
- Web取込側で新しく小説を取り込んだ時に、本棚に小説が追加されていないように見えてしまっていた問題を修正

Version 1.1.52 (1.1.113)
- 設定 -> ルビはルビだけ読む を10回位ON/OFFすると出てくるデバッグメニュー内の デバッグログの表示 部に、Copy ボタンを追加
  表示されているもの(Filterで絞っている場合は絞られたもの)がペーストボードにコピーされます。
- 設定 -> 開発者へ問い合わせる に「内部に保存されている操作ログを添付する」のON/OFF設定を追加
  上記のデバッグログを問い合わせのメールに添付するか否かのON/OFF設定が追加される形です。

Version 1.1.51 (1.1.111)

- Web取込 機能側での一回で取り込まれる小説の章の数の最大値を100から1000に増加
  Version 1.1.50 (1.1.110) の変更にて、同じページが延々と読み込まれ続ける問題を解消したことから、ニュースサイト等で日々のニュースを延々と読み込み続ける問題以外には無駄な連続読み込みが発生しづらくなったということで、一度に読み込まれる小説の章の数の最大値を100から1000に増やしました。
  で、増やした後に章の数が1200とかある小説を見かけてなるほどーと思っているのですけれど、どうせなら5000位に増やしたほうがいいんですかね……？
  と、思ったのですが1章の読み込み毎に少し待ってから次の章を読み込む都合上、だいたい1000章を読み込むのに30分弱かかると思われるのですが、5000章ともなると2時間半となって無駄な読み込みに2時間半も使われるのはさすがに痛いですね。
  ということなので、とりあえずは1000章分で様子をみてみます。
- ルビはルビだけ読む 機能でルビとして判断される文字列の扱いを少し変更
  これは |AAAA(BBBB) とあった時の AAAA や BBBB の文字数を、今まで10文字までを限界としていたのですが、その文字数の限界を取り去った、というものです。
  この10文字というのは 小説家になろう様 のルビの仕様(https://syosetu.com/man/ruby/)がそうなっていたのでそれを参考にしていたのですが、「|力場装甲(フォースフィールドアーマー)」というもの(「フォースフィールドアーマー」が13文字なのでルビが振られた文字列として認識されなくなる)をみかけまして、長いものもあるものだなぁという事でルビ側の文字列については文字数制限を緩めたという形になります。
  なお、この文字数を10文字としていたのは、Version 1.1.46 (1.1.95) の時に変更した「AAA｜AAA（BBB）XXXXX...YYYYY《CCC》ZZZZZ。」という文があった時に、「AAA《CCC》ZZZZZ。」と読み上げていたという問題に対して、ルビとして認識される部分の文字数が10文字に制限されればこのようなミスは起きにくくなるだろう、という思惑があったわけなのですが、正規表現側でウマイこと書いてやればこのケースについては回避可能でありました(単に最短一致を使いました)ので、文字数の制限は撤廃したという事になります。


Version 1.1.50 (1.1.110) 2019/02/08

- 「なろう検索」タブの削除方針に則り、「なろう検索」タブにて告知を開始
  これは、サポートサイト下部からリンクしておりますQ&Aに追記しました「なろう検索 タブ等の削除方針について」
  https://limura.github.io/NovelSpeaker/QandA.html#DeleteSearchTab
  の告知を「なろう検索」タブ内部にボタンとして追加したものになります。
  このボタンを押すとWeb取込タブにて上記のURLが開きます。
  上記のQ&Aに追記した時には考えていなかったのですけれど、どうも Web取込 機能を使っていない人が居るみたいなんですよね。
  そういう人は なろう検索 タブが消えると「使えなくなった！」とか言い出しそうな気がするんですが、こういう人に対して Web取込 機能の使い方を説明するのはどうしたら「良い」のかさっぱりわからないというか、あたかも Web取込 機能が無いかのように、「カクヨムなので ことせかい で読めないんですよね」とかTweetされている人を見るにつけ(なお カクヨム様 は Web取込 で対応しているはずです。Safari から読み込もうとすると Safari で本文ページを開こうとした時に カクヨム アプリ側に奪われてしまって難しいかもですが Web取込 タブ側から行けばいけるはずなので……)、どうしたもんだ感が強くなってしまってですね……(´・ω・`)
- Web取込機能において、同じページを読み込み続けてしまう可能性のある問題を修正
  Web取込機能において、複数ページがあるけれど、最後のページでまた同じページが次のページとして抽出されてしまった場合にその同じページが延々と次のページとして読み込まれ続けてしまう問題を修正したものになります。
  これを試すことができるURLを示せると良いのですが、どうやら期間限定のページらしく、この修正をした日までしか存在しないWebPageらしいので恐らくはこのβ版の審査が終了する頃には見えなくなっていそうな気がします……
  一応こちらで確認したその期間限定のURLは https://dengekibunko.jp/trial/saihate_all-1.html で、この26ページ以降がずっと読み込まれ続けてしまうという状況でした。
- 内部動作ログをデバッグメニューの「デバッグログの表示」部に追加するように
  設定タブ の「ルビはルビだけ読む」のON/OFFを10回位繰り返すと一番下に現れるDEBUGメニューの「デバッグログの表示」で表示される情報が色々いっぱい増えます。
  状況がよくわからないエラーの報告があった時に、「そこに書かれた文字列を全部コピペで送って下さい」という荒業で状況の把握の足しにできればなぁと思っています。
  あー、でも、これ、全部コピーするボタンとかつけとかないと駄目かもですね。(´・ω・`)

Version 1.1.49 (1.1.109) 2019/01/25
- HTML上のルビ(rubyタグ)を取り込む時には一律で "|文字(ルビ)" の形式で読み込まれるようにすることで、「ルビはルビだけ読む」がより意図通りに動作するように
  ことせかい は「ルビはルビだけ読む」がONになっている場合でも、「ドラゴン殺し(ドラゴンスレイヤー)」といった文字列を「どらごんごろしどらごんすれいやー」と発話してしまいます。
  これはルビとして判定される文字列として、先頭に「|」が入っていないもの(今回の例の場合)はルビが振られる文字として、カタカナか漢字のみである必要があり、今回の例のようにひらがなの「し」が入ってしまう事でルビとして判定されずに「どらごんごろしどらごんすれいやー」と発話されてしまうという事が原因です。
  なのですが、元々のHTMLでは <ruby>ドラゴン殺し<rp>(</rp><rt>ドラゴンスレイヤー</rt><rp>)</rp></ruby> と書かれているであろうことが想像されます。この元の情報では「ドラゴン殺し」に「ドラゴンスレイヤー」とルビが振られるべしという情報があったはずですが、単にHTMLタグを削除してしまったために「ドラゴン殺し(ドラゴンスレイヤー)」という文字列に変換されることになってしまい、上記のような残念な結果となるわけです。
  ということなので、このような残念なことが起きないように、<ruby>タグの直後に「|」を入れるようにしました。(正確には <rp>(</rp> が無い場合にも「(」を追加するなどといった小細工も追加しています)
  これで、rubyタグ が書かれているものについては、「ルビはルビだけ読む」が正しく判定できるような文字列に変換されるようになったはずです。


Version 1.1.48 (1.1.108) 2019/01/06
- iOS 8 以上への対応から iOS 10 以上への対応に変更した事に対して、deprecated(廃止予定) になったAPIを利用しているものを撲滅した
  - 使用しているダイアログ(画面中央に出てくるウィンドウ)で、古いタイプのAPIを使っていた物を撲滅して新しいタイプの物(外部ライブラリの EasyDialogs を利用したもの)に変更
    UIAlertView が deprecated(廃止予定) になったため。
    以前から EasyDialogs も使用していたので変わっていないものもあるのですよね……
  - ネットワークアクセス周りで利用していたAPIを一部変更
    NSURLRequest 周りが deprecated(廃止予定) になったため。
    場合によってはネットワークアクセス周りで止まってしまったり、リクエストが失敗したりするかも……
  - 通知周りで利用していたAPIを変更
    UIUserNotification 周りが deprecated(廃止予定) になったため。
    ことせかい での通知は、設定 -> 小説の自動更新 を ON にして、その自動更新(手動で更新ではなくて ことせかい が起動していない時に勝手に更新される奴)で新しい章が読み込まれた時でないと通知が発生しないので確認するのは結構大変です。
    やるとすると何ページもあるような物についてダウンロードを開始させて、途中で ことせかい を終了させることで途中までしか読めていない状態にして、自動更新をONにしてしばらく放置(最低で1時間以上放置)して自動更新をかけさせてその小説の新しいページが読み込まれるのを待つというのがありますが、それでも最低1時間はかかります……(´・ω・`)
  - その他細かい物が色々あります。中にはヤバいのが含まれているかもわかりません……('A`)
- 設定 -> 小説の自動更新 がONの時の更新通知の情報を増やしました。
  具体的には更新された小説名が通知に追加されます。文字数が多くなると通知を長押ししてやらないと全部はみられないようになる……と思います。
  新しい通知の仕組みを使っているので、通知をタップするとその通知にかかれている小説(の一番上のものとか)が開く、みたいな事もできそうなのですけれどそうして欲しい時とそうしてほしくない時がありそうだなぁと思いましたので、今の所は特に何もせずに単に ことせかい を開いた時と同じ動作(標準の動作)にしてあります。
  

Version 1.1.48 (1.1.107) 2019/01/05
- 「設定 -> 起動時に前回開いていた小説を開く」をOFFにしている時に現れる「本棚下部にその前回開いていた小説の続きから再生を開始するボタン」のテキストに「▶︎」を追加
  テスターさんからの助言を採用しています。ありがとうございます。これで、より「再生するぞ」感が出る事を期待しています。
- iOS 10 で「設定 -> 起動時に前回開いていた小説を開く」をOFFにしている時に現れる「本棚下部にその前回開いていた小説の続きから再生を開始するボタン」の挙動がおかしかった問題を修正
  具体的には表示が出る時と出ない時、出ても画面下部に出なかったりするといった、表示される場所が意味不明な場所になってしまうという問題に対応したものになります。
  主にシミュレータでしか確認していませんが、手元に唯一残っている iOS 10 の入った iPad とシミュレータで似たような挙動をしていたので多分大丈夫と思います……
- 外部ライブラリの利用設定で iOS 8 以上としていた所を iOS 10 以上とした
  使用されている外部ライブラリの挙動が場合によっては変わるのですが、色んな所に使われているのでどこに影響があるかよくわかりません。

Version 1.1.48 (1.1.106) 2018/12/22
- 読み上げの話者が未設定の場合、標準のもの(kyoko)ではなく利用可能な中でリッチな話者を選択するように
  これは 設定 → 声質の設定 の話者の設定が Default になっていないと効果を発揮しませんので ことせかい をアンインストールしてインストールしないと確認できません。
- iOS 10 以降の対応に変更(以前は iOS 8 以降でした)
  iOS 9 以前では動かなくなります。
- 設定 -> 起動時に前回開いていた小説を開く のON/OFF設定を追加
  この設定はONが標準となります。OFF にすると、起動時に前回開いていた小説は開かなくなりますが、前回開いていた小説が読み終わっていなければ(続きがダウンロードされていなければ)、本棚下部にその前回開いていた小説の続きから再生を開始するボタンが現れます。
  このボタンを押すと対象の小説が開いて自動で読み上げが開始されるのですが、なんか「このボタンを押したら再生が開始されちゃったんですけど再生しないようにできませんかね」というお問い合わせが来るような予感がひしひしとするんですよね。
  起動時には前回開いていた小説が画面内に表示されるようになっているので単に開きたい時はその小説をタップしてもらえればいいということで新しく追加したボタンは再生をするようにしている(というか、ことせかい を開いて Speak ボタンを押したら前回からの続きが再生されるという利便性を「前回開いていた小説を開く」がOFFになっていても享受できるようにという目的のボタンなので再生される)のですけれど、目立つ位置にボタンがほよんと出てくるので押したくなるから押すといきなり音が出るのはビビるとかそういう話になりそうな……うーん。どうしたらいいんでしょうね……

Version 1.1.47 (1.1.105) 2018/12/19
- なろう検索 経由での小説本文のダウンロードが失敗するようになった問題に対応
2018/12/18 辺りから「なろう検索」経由での本文のダウンロードが失敗する状態になっていた問題への対応になります。
「なろう検索」経由での本文のダウンロードは、今までは 小説家になろう様 の TXTダウンロード を利用させていただいていたのですが、この TXTダウンロード の機能がログインした状態でないと利用できなくなったようでしたので、Web取込 と同じ仕組みでの取り込をするように変更しました。
ですので、今までと少し違った形式での取り込みになると思われます。
おそらくですが区切りか何かに使われている横のラインは今までは「*********」というような文字列になっていたと思うのですが、これが新しい取り込み方だと何もなくなる、といったような差が出てくるような気がしています。
なお、この問題はユーザ様側からのお問い合わせがかなり増えるタイプの問題になりますので、このバージョンに関してはAppleさんの審査が通り次第リリースしようと思っています。おそらく審査は2,3日かかると思われます。
ですので、その2,3日の間に届かなかったテスト結果報告は次回以降のリリースになってしまいますので、お忙しい中申し訳ないのですがβテストのテスト結果報告はできるだけ早めにお願い致します。

Version 1.1.46 (1.1.103) 2018/11/30
- 設定 → 小説の自動更新 を ON から OFF にした時に、自動更新が停止していなかった問題を修正
  全く気づいていませんでした。すみません。テスターさん本当に助かっています。ありがとうございます。
  問題を起こす状態にするのは単に「設定 → 小説の自動更新 を ON から OFF にすれば良い」んですが、
  自動更新自体が起こるのはこれ、iOS側 が余裕があると判断してくれないと実行してくれないのでいつになったら自動更新がかかるのかがわかりません。
  早ければ1時間後、遅いと何日もかかるかも……？ という位なので多分確認しにくいと思われます。
  「*個の小説が更新されました」といった通知が飛んできた場合は自動更新が動いているという事になりますので、OFFなのにこれがやってきたらおかしい、という判断になります。

Version 1.1.46 (1.1.102) 2018/11/26
- 小説本文が表示される時に別アプリがバックグラウンド再生している音楽等が止められる、という問題に対応 に漏れがあったので再度修正
  まだ漏れがありましたので修正しました。テスターさんありがとうございます。非常に助かります。ありがとうございます。
  具体的には、内部処理で再生の停止を行おうとした時に、再生中でなくても別アプリのバックグラウンド再生が止められる、という箇所があったのを修正しています。
  再現しやすいのは小説の本文が表示されている状態から表示されないようにしようとする(例えば)本棚に戻ろうとする)と再生していようがいまいが再生停止のプロセスが走りますのでこの問題を踏めます。
  再現するには以下の条件が必要です。
  1. 『設定 → 「他のアプリで音楽が鳴っても止まらないように努力する」』がOFFの状態であることを確認(これがONだと再生は止まりません)
  2. 本棚で小説をタップして小説本文が表示されている状態にする
  3. ミュージックアプリ等で音楽再生を開始
  4. ことせかい に戻り、2. で表示している小説本文を表示しなくなるようにする(本棚に戻るなど)
  今回は動作のパスも確認したのでさすがにこれで漏れはないと思うのですが……
  これだけ見逃しがあると自分を信用できないのでまたもう一週間位はβテスターさん達と一緒に使って様子見しますかね……(´・ω・`)

Version 1.1.46 (1.1.101) 2018/11/22
- 小説本文が表示される時に別アプリがバックグラウンド再生している音楽等が止められる、という問題に対応 に漏れがあったので再度修正
  何度も修正してしまって申し訳ありません。(´・ω・`)
  前回 Version 1.1.46 (1.1.100) で修正したものは 本棚画面から小説名をタップして小説の本文が表示される瞬間 のもので、
  今回 Version 1.1.46 (1.1.101) で修正したものは ことせかい の起動時 のものです。
  同様の処理を行っている所は上記の二箇所しか無いはず(一応 source code 全てを対象に検索したのでそれ以外は無いはず……)なのでこれで期待する動作になると思われます。

Version 1.1.46 (1.1.100) 2018/11/21
- 小説本文が表示される時に別アプリがバックグラウンド再生している音楽等が止められる、という問題に対応
  確認方法としては、
  1. 『設定 → 「他のアプリで音楽が鳴っても止まらないように努力する」』がOFFの状態であることを確認(これがONだと再生は止まりません)
  2. 本棚タブは本棚が表示されている(又は ことせかい が終了している)のを確認(小説本文の表示に切り替わった時に発生するので本棚タブに小説本文が表示されていない状態にする必要があります)
  3. ミュージックアプリ等で音楽再生を開始
  4. ことせかい を起動して本棚タブで小説本文を開く
  という手順で、4. の時に再生が停止しなければ直っている、という形になります。

Version 1.1.46 (1.1.99) 2018/11/16
- 設定 → ルビはルビだけ読む を ON にすると出てくる ルビではないと判断する文字 の初期値を「・、 　」から「・、 　？?！!」に変更
  「漢字（ルビ）」という形式はルビなので、「正確（？！）」もルビとして判断されてしまって読み上げられないという状況が発生していたものへの対応になります。
  読み上げられない文字という文字集合は正規表現には無いので一つづつみつけないといけないんですが、どうしたもんか。(´・ω・`)
- Web取込 で取り込んだ小説が多めにある時に、本棚で全ての小説のダウンロードを開始してしばらくすると落ちる問題の一部を修正
  内部処理でメモリが開放されずにたまり続けてメモリが足りなくなって落ちていたものを修正しました。
  これで、自動更新がなんか最近うまくいってないんだよなぁという問題の一部が解消しそうな気がします。
  スコープから外れたら開放して良いものは勝手に開放されるのかなぁと思っていたんですけれど、明示的に autoreleasepool で指定してやらないと開放されない事があるんですね。(´・ω・`)

Version 1.1.46 (1.1.98) 2018/11/14
- 設定 → ルビはルビだけ読む を ON にすると出てくる ルビではないと判断する文字 の初期値を「・、」から「・、 　」(半角スペースと全角スペースが追加されたもの)に変更しました。
- 上記の変更に伴い、起動時に「ルビではないと判断する文字が」今までの(古い)初期値であった場合には最新の初期値(「・、 　」)に強制的に上書きするような処理を入れています。
多分これを入れておくことで「ルビを読み飛ばした」という問い合わせ対応が減るに違いないです。
- 設定 → 「他のアプリで音楽が鳴っても止まらないように努力する」の所に「(イヤホンやコントロールセンターからの操作を受け付けなくなります)」という文言を追記
  これは「他のアプリで音楽が鳴っても止まらないように努力する」をONにした場合には「アプリケーションの種類に応じた音声の取り扱いガイドライン」
  https://developer.apple.com/jp/documentation/Audio/Conceptual/AudioSessionProgrammingGuide/AudioGuidelinesByAppType/AudioGuidelinesByAppType.html
  の「協調型音楽制作アプリケーションに関する音声まわりのガイドライン」に準拠した挙動となり、リモコン操作を受け付けなくなるのは仕様(「遠隔制御イベントにサインアップしない」が適用されているという事)のようなのですが、恐らくこの挙動は期待されていないというか推測できないと思われますので、「(イヤホンやコントロールセンターからの操作を受け付けなくなります)」という文言を追記することにしました。

Version 1.1.46 (1.1.97) 2018/11/14
- 設定 → 他のアプリで音楽が鳴っても止まらないように努力する の ON/OFF 設定を追加
  この設定を ON にすると、ミュージックアプリ(Apple純正の奴)での音楽再生と ことせかい での読み上げが同時にできるようになります。
  多分ゲームとかで共存できなかった物でも共存できるようになるのではないかな？と思うのですが、駄目なものもありそうなので「〜努力する」といった書き方にしています。
  また、今までと動作が変わるので「〜をしたら止まると思ってたのに止まらなくなったではないか」的なお問い合わせが怖いので ON/OFF 設定にしました。
  - この設定を ON にすると、「他のアプリの音を小さくする」の ON/OFF 設定が追加されます。
    こちらは他のアプリと同時に ことせかい の読み上げが行われる時に、他のアプリ側の音を小さくするか否かの ON/OFF 設定になります。
  - 設定 → 再ダウンロード用データの生成 で生成されるバックアップデータ(軽量の完全のどちらも)にこれら2つの設定値が追加されます。

Version 1.1.46 (1.1.95) 2018/11/13
- 設定 → ルビはルビだけ読む の ON/OFF を切り替えた前後で開いていた小説のページが変わらないまま読み上げを開始するとその設定が反映されない問題を修正
- 設定 → ルビはルビだけ読む でルビとして判断される基準を少し変更
  ことせかい でのルビの判定は 小説家になろう様 の定義(https://syosetu.com/man/ruby/ )をもとにしているのですが、定義にある「｜AAA《BBB》」の形式ではない「｜AAA（BBB）」の形式でもルビとして認識されているようなので、「｜」で始まるものは「《》」だけでなく「（）」(全角丸括弧)と「()」(半角丸括弧)でも反応するようにしました。
  また、今まではルビを振られる文字もルビとして振り替えられる文字も長さに制約はなかったのですが、小説家になろう様 の定義(https://syosetu.com/man/ruby/ )ではそれぞれ10文字までと書いてある事に気づいたので同様に10文字までしか反応しないようにしました。
  具体的な例としては、「AAA｜AAA（BBB）XXXXX、XXXXXX、XXXXX。YYYYY、YYYYY、YYYYY《CCC》ZZZZZ。」という文があった時に、「AAA《CCC》ZZZZZ。」と読み上げていた、という問題が修正されます。

Version 1.1.45 (1.1.94) 2018/11/07
- 読み上げ中以外ではページめくり音が出ないように
  Version 1.1.45 (1.1.90) 2018/11/05 で修正した「ページめくりの時に鳴る音の扱いを、システムサウンドからアプリ側サウンドに変更」による影響でページめくり音が読み上げと同様にマナーモードの影響を受けなくなったため、目で読んでいる時(読み上げている時)にページをめくるとマナーモードであってもページめくり音がするという状態になっていたため、読み上げを行っている時以外にはページめくり音を出さないようにしました。(テスターさんありがとうございます)
- 本棚の左上の検索ボタンの挙動を少し変更しました
  - キーボード側の改行(Enter)押下 で OK が押された挙動にしました
- さすがにそろそろリリースしたいですね……(´・ω・`)

Version 1.1.45 (1.1.92) 2018/11/06
- 本棚の左上の検索ボタンの挙動を少し変更しました
  - 虫眼鏡のアイコンから「検索」という文字列に変更して、検索中は「検索(検索文字列)」という表示になるようにしました
    これで検索中なのか否かがわかりやすくなる……と思うんですが、iPhone SE 等の幅の狭い端末だと表示が切れてしまってよくワカラン事になりそうな予感もしますね……
    あと、将来的にボタンを増やそうとした時に増やしにくくなりますね……
  - 検索ボタンを押して出てくるダイアログに、「クリア」ボタンを追加しました。同様にテキストボックスに文字消去用の✗ボタンを追加しています。
    これで検索をやめる時のタップ数が少し減るはずです。
    ついでにキーボード側の Enter 押下で OK が押されるようにしようと思ったんですけれどダイアログを出している EasyDialog という外部ライブラリの変更が伴うのでどうしようこれ面倒くさい…… という気分でいっぱいです。後回しでいいですか……？(´・ω・`)

Version 1.1.45 (1.1.91) 2018/11/06
- 本棚の左上に検索用のボタンを配置
  しました！( ﾟ∀ﾟ)b

Version 1.1.45 (1.1.90) 2018/11/05
- ページめくりの時に鳴る音の扱いを、システムサウンドからアプリ側サウンドに変更
  今までのページめくり音はシステムサウンドとして鳴らしていたため、アプリ側のサウンドとして鳴っている読み上げの音量と別の音量制御(アラームや着信音の方の音量制御)が適用されていました。
  この修正ではこのなる時の音量の扱いをアプリ側のサウンド音量に従う方に変えましたので読み上げの音量と同期してページめくりの音量が変わるようになります。
  多分この方が普通？な気がするのでオプションによるON/OFFはつけない予定なのですが、それは困るという方がおられましたらON/OFFでシステムサウンドとしてページめくり音を鳴らすような方法も考えますのでβテスト結果報告の時にでも(理由も添えて？)教えていただければと思います。
- 本文上で長押しして出てくる「読み替え辞書へ登録」を押した後の読みの修正詳細にて、読み替え前の文字列を選択されていた文字で初期化するように
  「読み替え辞書へ登録」を押した時にこうなっていないのはおかしいですよねカテジナさん……

Version 1.1.45 (1.1.89) 2018/11/01
- バージョン更新時のダイアログを消した後でも最後に読んでいた小説を開くように
  これはなんで今までやらなかったんだ、という気がしています。(´・ω・`)
- 起動直後の一回だけ、最後に読んでいた小説が一番上に表示されるように本棚の表示位置が移動されるように
  これで、ことせかい を起動 → 最後に開いていた小説が開くのでそのまま聞く → 読み終わったので本棚に戻る → 今読んでた小説はどこだったっけかなと探す
  の最後の部分が、「今読んでいた小説は一番上(下が少なければ画面内のどこか)にあるはずなのでスクロールしなくても発見できる(はず)」になる……
  という目的です。まぁ…… 嬉しい人は少ないかもですけれど、
  起動した後の本棚から本を開いて戻った場合には本棚ではその本が画面内に表示されている状態になっていたわけなので、それに似通った表示になるのでいいかなぁと。

Version 1.1.45 (1.1.88)
- 最大連続再生時間が終わるのと同時にページめくりが発生した場合に再生が停止しなかった問題を修正
  これの再現はちょっと面倒です。最大連続再生時間を最小の1分にして、自作小説で1章がだいたい1分で読み終わるようにした章を作って、コピペで2,3章分同じ章を保存した上で、章の最初の所から読み上げ始めれば、大体ページめくりと同時に再生を停止しようとするはずです。
- 再生を停止した後、設定された最大連続再生時間後に「連続再生時間を超過したので再生を停止します」的なアナウンスが流れてしまっていた問題を修正
-「設定」->「コントロールセンターでの前の章や次の章へのボタンを少し巻き戻し・少し進めるボタンへ変更する」が ON になっている状態で、一番最初の章で限界まで巻き戻そうとすると「設定」->「コントロールセンターに再生時間を表示する」が ON の時に表示される再生時間が再生が終わった時間を表示してしまう問題を修正
  なにこの長い日本語わかりにくい……('A`)
- 読み上げ中にイヤホンジャックからイヤホンを引き抜いた時に、再生位置がかなり前に戻ってしまう問題を修正
  今までは読み上げに使っているブロック(1文〜1節位の分量)の先頭まで巻き戻る可能性がありました。
  なお、設定される読み上げ位置は引き抜いた時のものではなく、引き抜く少し前のものを目標に少し巻き戻すように設定しました。
  そうしないと引き抜かれている時に読み上げていた部分が聞こえなくなってしまったので。

Version 1.1.45 (1.1.87)
- 読み上げ開始時にロック画面での再生位置表示がおかしくなる問題へ対処(したはず)
  発生条件はわかっていないのですが、「設定」->「コントロールセンターに再生時間を表示する」がONになっている時で、読み上げを開始した時にそのコントロールセンターの再生時間が再生終了の時間(例えば再生時間が5分だと判定されていたら、いくら読み上げる文章が後ろにあっても5分の場所になってしまっているという状態)になる場合があったのを、読み上げ開始時に強制的に値を上書きすることを試みる事で回避できたらないいなぁというものです。
  ただ、この問題の発生条件がわかっておらず、確実に再現させる方法が無いために、この対応で問題が解消したのかどうかがよくわからない、という状態になっています。
  ということなので、とりあえずこの修正の入った状態で暫く使ってみて、上記のような問題が起こらないのであれば直ったということにしたいなぁ……という感じです。
  これもまた直ったかどうかはわからないのでアナウンスはしないでこっそりリリースな感じになってしまいそうな予感はしますが……(´・ω・`)
  そういえば、バックグラウンド再生中に再生が止まらないようにと入れたオカルト的手法(無音の音を再生し続ける)っての(Version 1.1.43 (1.1.82) で常時ONになっている奴)なんですが、あの後バックグラウンド再生中に再生が止まったという方はおられますか？
  おられましたら「直ってないみたいだよ(もし覚えていたら詳しい状況(再生が止まった小説名や止まった箇所等))」と教えて頂けると嬉しいです。
- 設定 -> 更新履歴 と 設定 -> クレジット の Editable(編集可能)属性 を OFF にしました。テスターさんありがとうございます。
  いつから ON になっていたんだろう……(´・ω・`)
- 最大連続再生時間のカウントダウンが、読み上げ中にページ切り替えが発生した時にリセットされていた問題を修正
  例えば全ての章(ページ)の読み上げ10分かからないような小説を読み上げている時に、「設定」->「最大連続再生時間」が10分に設定されていると延々と読み上げが停止せずに最後まで読み上げられてしまっていたはずです(今はそれが直っているはずです)。
- 最大連続再生時間を超えて再生が停止する時にそのようにアナウンスをするようになります。


Version 1.1.45 (1.1.85)
- 小説本文を表示している部分でのスライドバーの最大章(ページ)数は、現在ダウンロードされている章(ページ)の数を表示するように変更
  ダウンロードされている章(ページ)の数ということで、1章(ページ)目から順にダウンロードされているのであれば数は合うはずで、ことせかい はそのようになるようにしか章(ページ)をダウンロードしないはずなので大丈夫だと思うのですが、そうでないパスがあると表示できない章(ページ)が現れるはずです。
  例えば、ダウンロードされている章(ページ)が、[1, 2, 3, 5, 6, 8, 9] (4と7が無い) という状態が発生した場合、スライドバーの最大値は 7 になります(ダウンロードされている章(ページ)の数は7個なので7になる)ので、1〜7までの章(ページ)しか指定できずに 8 と 9 章(ページ)は表示できず、ダウンロードされていない 4 と 7 章(ページ) を表示しようとすると「文書の読み込みに失敗〜」といった表示になります。
  ただ、通常の使用においてはそのような状態になることは無いはずなので、問題になることはない…… と思うんですが、そのような状態になってしまうような事があると上記のような形で誤動作するはずです。
  多分、設定 -> 再ダウンロード用データの生成 -> 完全バックアップ〜 で生成したデータを自分で書き換えて歯抜けのデータにして、その歯抜けにした小説を ことせかい の側で削除してから、歯抜けにしたデータを読み込ませることでそのような状態が生成できそうな気がしますが…… そんな事をする人は誤動作しても驚きませんよね……？(´・ω・`)
  なお、そのような歯抜けになった状態が生成されてしまった場合、Web取込 経由で取得された本についてはその歯抜けの部分を再度ダウンロードするには本棚からその小説を削除してもう一度最初からダウンロードしなおす以外の方法はありません。のですが、そのような事になったので困ったといったお問い合わせは今まで受けたことがないので多分きっとそんな事になるパスは存在しないと信じています。

Version 1.1.44 (1.1.84)
- なろう検索 経由でのダウンロード時に、ダウンロードが失敗を検知できていなかった問題を修正
  この状況を発生させるのはちょっと面倒です。やるべきことは「小説家になろう様 のサイトに対して何度もダウンロードを試みて、ダウンロード制限状態になる」という状態を発生させればダウンロードが失敗が発生するのですが、普通に ことせかい を使っているだけだとこれは発生しません。手元に iOS 端末 が複数あるのであれば、それぞれに ことせかい をインストールして、掲載されている章の多い(100以上の章があるものが望ましいです)小説を、それぞれの iOS端末 にインストールした ことせかい で同時に1章目からダウンロードを開始することで発生させることができます。
  これが発生すると、1.1.83 以前の ことせかい では、"<?xml" から始まる謎の文字列(HTMLです)が取り込まれたように見えます。
  1.1.84 以降であればこの謎文字列は取り込まれず、単にダウンロード失敗として扱われてダウンロードがその章までで止まります。
  なお、このダウンロード制限状態を解除するにはある程度の時間待つ必要があります。だいたい15分も待てば大丈夫そうでしたが、保証はできません。
- Web取込 経由でのダウンロード時に、内容が空白のみの場合にもダウンロードを失敗とするように
  こちらは アルファポリス様 の仕様変更による問題をある程度回避するための策になります。ただ、この対策は完璧ではありませんというか、アルファポリス様は Web取込 機能では取り込めないサイトになりました(詳細はサポートサイト下部にリンクのありますQ&Aを御覧ください)。
  とはいえ、なぜなのかはわからないのですが、20回程ダウンロードするまでの間は本文が読み込めるようです。ということなので、ある程度の時間を置いて(こちらも恐らく15分位おけば大丈夫そうでした)から再度ダウンロードを試みる、ということをすれば本文を読み込めないことはない、という形のようでした。
  なのですが、Version 1.1.83 までは、本文が読み込めていないもの(正確には空白と改行が読み込めているので内容がカラというわけではなかった)が読み込まれて保存され、次の章へのリンクは正常に取り込めてしまうために次の章を読みに行き、また空白と改行だけのものを取り込んで保存して……という動きになってしまって、結果的に意味のないものが取り込めてしまう、という状態になっていました。
  そこで、この修正では空白や改行などの表示されない文字だけしか含まれないものについては読み込みに失敗したと判断するようにしました。そうすると、最初の20回程は本文が読み込まれるのでその本文を保存して、本文が読み込まれなくなったらそこでエラーとしてダウンロードが停止するようになります。
  そうすると、「設定」->「小説の自動更新」をONにしている場合などでダウンロード制限のようなものが外れた頃に再度ダウンロードを試みるようにすることで、ゆっくりとですがダウンロードができるようになると考えられます。
- Web取込 タブのブックマークの初期リストから アルファポリス を外しました
  - 同時に標準で含まれていた アルファポリス へのブックマークがあった場合には、非対応になった旨の文字列が追加されるようにしました。

Version 1.1.44 (1.1.83)
- 設定 → 読みの修正 で個々の変換ルールをタップすると詳細画面に移行するように
  - 変換ルールをタップして詳細画面に移行した場合、「確定」ボタンを押すとタップされた修正候補を一旦削除してから、改めて登録しなおすという動きになります
    例えば「あいうえお」から「かきくけこ」への変換ルールをタップして出てきた詳細画面で、「あいうえお」を「あかさたな」に書き換えて「確定」すると、「あいうえお」から「かきくけこ」への変換ルールは消えて、「あかさたな」から「かきくけこ」への変換ルールが追加される、という挙動になります(なるはずです)。
    この修正は、正規表現周りは何回かテストしてみないとちゃんと動いているかわからないのですが、今までですと毎回新しく変換ルールを入力しないと駄目であったので、使えない変換ルールが増えていくというのと、似通った文字列を何度も入力しなくてはならなくて辛い、という事から、既存の物を書き換えるという事ができるようにするためです。
    そういう意味では使いやすくなった…… と…… 思います。多分。
- 設定 → 読みの修正 → 読みの修正詳細 画面にて、正規表現マッチがOFFの場合のみ、読み替え前の文字列を変更すると変換テスト用の読み替え前文字列がその文字列に変更されるようになります
  ……この日本語何言ってるのかよくわからない('A`)
  えぇと、「読みの修正詳細」画面には4つの文字列が入力できそうなテキストボックスがあるんですが、それは上から A(読み替え前の文字の入力欄)、B(読み替え後の文字の入力欄)、C(テストに使われる読み替え前の文字列)、D(CをAとBのルールで変換した後に得られる文字列) なのですが、この A の部分を書き換えると C が A と同じ文字列に置き換わる、という意味です……
  これでも画面を観ながらでないとよくわからん…… き、気合で！気合で理解してください！('A`)
  こちらの変更意図は、正規表現の概念が追加される前の読み上げテストと同等のテスト読み上げができるように、という感じです。

Version 1.1.43 (1.1.82)
- iOS 12 における[〜中略〜]暫定的対応の六回目です
  書き換え対象の文字列を "[\s•・*]"(空白や改行に加えて "•"(BULLET), "・"(KATAKANA MIDDLE DOT), "*") に拡大しました。
  "•"(BULLET) なども読み上げられない文字列なのですが、"α•α•α•α" といった文字列を読み上げさせるとずれが発生するけれど、"ααααα" であればずれは発生しないので、とりあえずの対策です。とはいえ、何故そうなるのかはさっぱりわからないため そもそもこれでいいのかどうかさっぱりわからないので、これでまた暫くβテスターの皆さんと一緒に使ってみてずれが発生する場合を発見しつつ潰して…… という感じでしょうか……
  ただ、読み上げに使う文字を変更する形での対応には限界があるであろうことはわかってきたのと、ずれが生じる例が報告されることも少なくなってきたような感じなので、この問題については Appleさん 側がなんとかしてくれるまでは根本的解決はできない事と諦めて、このバージョンで致命的な問題がでなければそれで一旦リリースしてしまおうかと思っています。
- iOS 12 における[〜中略〜]暫定的対応の五回目でやたら遅くなった部分を高速化しました(仕組みは少し変わりますがやってることの意味は変わらないはずです)
- 読み上げ中の位置表示に関する計算方法を変更しました。
  読み上げ開始位置の指定に長押しして範囲選択したり、読み上げ中に表示される読み上げ位置などの位置表示が「合わない時がある」から「合わない時でもまぁ、だいたいあってる」に変わるはずです。
  もちろん、読み上げ中の位置がずれる問題が発生している時はどうしようもなくずれます。
- 読み上げ中に無音の音を鳴らし続ける事でバックグラウンド再生中に再生が停止するのを回避しようとする試み(一つ前の ビルド番号 1.1.81 でデバッグ設定を呼び出してONしていたもの)を常時ONにするようにしてみました。
  それほど消費電力は増えないみたいというのと、1.1.81 で次の章に移動する時にやたら時間がかかって再生が止まるというのがこの対策で結構効果がありそう(OFFの時に10回やって9回再生が止まっていたのが、ONにしたら10回やって10回止まらなかったので効果が無い事は無いと思われる)なので。
  ただ、原因がわからないままの対策なので、直しましたとは言えず、リリース告知文には書きにくいですね。(´・ω・`)


Version 1.1.43 (1.1.81)
- iOS 12 における、読み上げ中の文字の表示位置がおかしくなる場合についての暫定的対応の五回目です
  どうやら改行文字でも読み上げ中の文字の表示位置がおかしくなることがありましたので、改行文字についても "α" に変換して読み上げさせることにしました。
  ただ、一旦読み上げ用の文字列を生成した後に改めて空白文字を一括して変換するという事をしていて、その時に正規表現によるマッチを使うため、変換作業に結構な時間がかかるようになります。
  と、いうことで、お手数をおかけしてしまっているのですが再度「設定タブ」→「iOS 12 で読み上げ中の読み上げ位置表示がおかしくなる場合への暫定的対応を適用する」をONにした状態で「あるふぁ」と読み上げられてしまうであるとか、読み上げ中の表示位置がおかしくなる場合を発見したら教えて頂けると嬉しいです。
  ただ、四回目のもので既にあまり「表示位置がおかしくなった」という報告は寄せられなくなっており、おそらく今回の修正で一応は大丈夫なのではないか……？という期待を持っています。なお、「あるふぁ」と読み上げられてしまったという報告は今の所1件もよせられておりませんのでそちらは多分大丈夫なんじゃないかなぁと思っています。
  なお、表示位置がおかしくなるのを確認した方は、問題の起きた文章そのものが開発者側の端末でも再生させてみることができるように、
  - 問題の起きた小説の名前(とできればURL)、問題の起きた小説の取り込み方(なろう検索経由なのかWeb取込経由なのか)、問題の起きた章(ページ)
  - 自作小説など、取り込むものでない場合はその本文そのもの(できればテキストファイルとしての添付が望ましい)
  - 問題の起こし方(どの部分から読み上げを開始するとどのようにズレるのか)
  - 可能であれば読み替え辞書や読み上げの間の設定(設定タブ -> 再ダウンロード用データの生成 -> 軽量バックアップ で生成されたバックアップデータに含まれます)
  を送って頂けると助かります。
- 設定タブ -> ルビはルビだけ読む を10回ON/OFF(ON->OFF->ONで1回なら5回)で出てくるデバッグ設定に、「再生中に無音の音を鳴らし続けることでバックグラウンド再生中に再生が停止しすることがないように祈る」のON/OFF設定を追加
  正直効果があるかどうかさっぱりわからないのですが、作ったのを忘れないようにデバッグメニューに入れておきます。
  これは、「バックグラウンド再生中に再生が止まり、アプリを表示してバックグラウンドからフォアグラウンドに戻した時に再生が再開する」ような問題に対して、あるいはこれで直ったりするのでは？という事をするためのものです。
  なのですが、これで直ったかどうかを確認するためには「バックグラウンド再生中に再生が止まり、アプリを表示してバックグラウンドからフォアグラウンドに戻した時に再生が再開する」という問題が確実に再現するような操作手順が明らかになっていないと、そもそもこの対策でバックグラウンド再生が止まらなくなったのか、単にバックグラウンド再生が止まらなかっただけなのかの確認ができません。
  そのためこれを正式にその対策とするわけにもいかず、とりあえず隠し機能てきなデバッグメニューに入れておくことにしました。
  とりあえず、バックグラウンド再生で再生が止まるのが嫌だなぁと思っている人はこの機能をONにして生活してみて、
  その状態でバックグラウンド再生が止まった(フォアグラウンドに戻したら再生が再開した)場合には、「やっぱりこの方法は効果がないようです」と連絡して欲しいです。

Version 1.1.43 (1.1.80)
- 設定タブの読み上げ時の間の設定 で、個別の設定を変えたり追加した後に読み上げ時の間の設定に戻ってもそれらの変更が反映された表示にならない問題を修正
- iOS 12 における、読み上げ中の文字の表示位置がおかしくなる場合についての暫定的対応の四回目は継続中です
  この修正は本当にこれで良いのかの自信を持てるようにするためにもう暫くβテスターの方々と一緒に使い倒してみて不都合が出てこないのを確認したいです。
  前回(1.1.79)のものと同じ内容を以下に挙げておきます。
- 前回(1.1.78)では空白とみなされる文字を正規表現での \s (https://developer.apple.com/documentation/foundation/nsregularexpression#1965589 によると [\t\n\f\r\p{Z}] と同じ意味) で表現していたのを、[\t\f\p{Z}] に変更しました。
というのは、「設定」->「読み上げ時の間の設定」で「<改行>」を対象にしたものがあった場合に、その間の設定よりも優先して空白を "α" に読み替える設定が適用されてしまっていたため、これを回避するための処置になります。
ただ、ちょっと気になっているのは、この「読み上げ中に読み上げ位置がおかしくなる」問題は改行を含む文字を読み上げようとした時にも発生するのではないか、という事です。ただ、そのような報告は今の所入ってきていないように見えるので多分……きっと……大丈夫……？なの？かな……？と思ってこれで行ってみる事にします。

Version 1.1.43 (1.1.79)
- 1.1.78 で追加した「設定」->「iOS 12 で読み上げ中の読み上げ位置表示がおかしくなる場合への暫定的対応を適用する」で出るダイアログで、iPhone SE 等ではダイアログが縦に長くなりすぎてOKボタンが押せなくなっていた問題を解消
- iOS 12 における、読み上げ中の文字の表示位置がおかしくなる場合についての暫定的対応の四回目です。
  - 前回(1.1.78)では空白とみなされる文字を正規表現での \s (https://developer.apple.com/documentation/foundation/nsregularexpression#1965589 によると [\t\n\f\r\p{Z}] と同じ意味) で表現していたのを、[\t\f\p{Z}] に変更しました。
    というのは、「設定」->「読み上げ時の間の設定」で「<改行>」を対象にしたものがあった場合に、その間の設定よりも優先して空白を "α" に読み替える設定が適用されてしまっていたため、これを回避するための処置になります。
    ただ、ちょっと気になっているのは、この「読み上げ中に読み上げ位置がおかしくなる」問題は改行を含む文字を読み上げようとした時にも発生するのではないか、という事です。ただ、そのような報告は今の所入ってきていないように見えるので多分……きっと……大丈夫……？なの？かな……？と思ってこれで行ってみる事にします。
    ということでとりあえずはこの状態で暫く使ってみて問題が発生しないことを見極めてからリリースをしようかなぁと思いたいです(前回も前々回も同じことを思っていたので3度目の正直になればいいなぁ……)

Version 1.1.43 (1.1.78) (1.1.77 は欠番)
- iOS 12 において、読み上げ中の文字の表示位置がおかしくなる場合がある問題への暫定的対処のON/OFF設定を追加
  - iOS 12 における、読み上げ中の文字の表示位置がおかしくなる場合についての暫定的対応の三回目です。
    今回は「正規表現を使って空白とみなされる文字の並び("\s+")を、"α" に置き換えて読み上げさせるようにする」かどうかのON/OFFの設定を追加しました。
    これは、少なくとも今の所の iOS の音声合成エンジンでは "α" を発話しないため、これを空白文字の代わりにしようというものです。
    ただ、読み替え先を "α" にするというのは、いつ何時音声合成エンジン側で "α" を発話するようになるかわからないので爆弾をかかえるような事になるんですよね……
    なので、暫定的対応であることを明示した上でオプションでON/OFFができるような形にしました。
    初期値ではOFFになっています。

  と、いうことなので、できましたらば、βテスターの方々で
   - 読み上げ中の表示位置がずれる
   - 空白があるべきところで「あるふぁ」などといった謎の誤読み上げが発生する
  というような事が「ない」事を確認して頂ければと思う……ん……ですが……
  そういう「無い事」を確認するのはいわゆる悪魔の証明……ですよねぇ……これはちょっと長い期間ドッグフーティングするしかなさそうですね……('A`)
  - ON/OFFの設定が追加されたことにより、「設定」→「再ダウンロード用データの生成」で生成されるバックアップデータに「iOS 12 で読み上げ中の読み上げ位置がおかしくなる場合への暫定的対応を適用する」のON/OFF設定が追加されます。

Version 1.1.43 (1.1.76)
- iOS 12 における、読み上げ中の文字の表示位置がおかしくなる場合についての暫定的対応の二回目です。
  今回は "　"(全角スペース) があると表示位置が更新されなくなるという問題があったので "　"(全角スペース) を "  "(半角スペース2つ) に読み替えさせます。
  - 前回の対応では取り込んだ保存されるデータを書き換えましたが、今回は保存されるデータには手を付けずに、
    表示時まではそのままで、読み上げ時に半角スペース2つになるように読み替え辞書に潜ませるという方法を取っています。
    つまり実装方法が変わっているので効果が出ない場合があるかもしれません。
  - とりあえず全角スペースで駄目になるのを試してみるには、自作小説を追加して、内容を「あいうえお　かきくけこ」("お"と"か"の間が全角スペース)というものにしたものを作れば試せるかと思います。
- おそらくこれら2つ("\u2028" と 全角スペース)以外のものもありそうな予感がするので気づかれた方は教えてください……(´・ω・`)
  - なんとなく、画面表示上は何も表示されない系で、かつASCII文字コードには無い領域の物(≒全角の記号系の表示されないもの)が
    表示位置をおかしくする原因になっているんじゃないかなぁという気がしています。
    なのですが、そんなのどう探すといいんですかね。もしかしてUTF-8を全部見ていかないとだめなんですかね……('A`)
- iPhone X 等のノッチのある iPhone では NetworkActivityIndicator(画面上部の時間やバッテリ状態が表示されている当たりに出てくるくるくる回るアレ)がなくなったらしいので、代わりに K.I.T.T みたいな左右にふゎんふゎんする表示をしてくれる FTLinearActivityIndicator というのを導入
  - なお、ことせかい では NetworkActivityIndicator をダウンロード中の表示に使っています

Version 1.1.43 (1.1.75)
- 外部ライブラリのバージョンを現時点での最新のものに更新しました
  - 色々なところで使っているのでどこが変わったとかは書けません(´・ω・`)
- ビルド環境を Xcode 11 から Xcode 12 に更新しました
  - Xcode に言われるがままに Swift 部分を Swift 4.2 へコンバートしました(ざっと眺めた範囲では特に問題になりそうな変更は見当たりませんでした)
- 読み上げ中の表示位置を動かす命令が main thread 以外から呼ばれる可能性を減らしました(読み上げ中に落ちる問題のうちほんの一部(もしかすると発生しない問題かもしれない位少ない可能性のもの)がなくなります)
- 読み上げ中の文字表示に使っている選択範囲が表示されない可能性があった問題を修正(こちらもその問題は発生していなかったかもしれない位のもの)
- iOS 12 において、読み上げ中の文字の表示位置がおかしくなる場合があった問題への暫定的対処をした(全ての問題が解決するわけではなく、一部に対して(具体的に言うと "\u2028" が入っている場合には多分確実に起こる問題であったのでこれを "\n" に変更するようにした)。しかし、別のパターンで同様の問題が起きることが確認されており(例えば "long sentence. long long sentence. long long long sentence..." という感じのものを読み上げさせると発生する)、全てが対処できたわけではない)
  - 確認するには "\u2028" が小説の本文に入っていないと駄目なので、とりあえず
    イリヤの空、UFOの夏@カクヨム/正しい原チャリの盗み方・後編 15/15
    https://kakuyomu.jp/works/1177354054885579795/episodes/1177354054886002315
    をWeb取込で取り込んで、多分だいたいどこでもいいのですが、とりあえず『「やるじゃん」そうつぶやいた。』という辺りに読み上げ位置を設定し、
    読み上げを開始すると、実際に読み上げている部分と表示されている読み上げ位置がずれているのが確認できるかと思います。
    あ、ずれるのを見るには AppStore側 からダウンロードして Version 1.1.42 で上書きした状態で、です。
    このバージョンではその小説に関しては正常に動くように修正したつもりです。

Version 1.1.42 (1.1.74)
- キーボードが出るシーンにおいて、キーボードが閉じられない場合があったのを改行を入れるなどで閉じられるように変更
  - 変更を行ったのは以下のシーンになります
    - ユーザ登録小説の編集シーンでの小説名入力時 (改行で消えるようになった)
    - なろう検索 (改行でしか消えなかったのを入力欄以外のタップで消えるようになった)
    - 設定 -> 声質の設定 (スクロール部の上下スワイプでも消えるようになった)
    - 設定 -> 読みの修正 -> 「+」で追加しようとした時 (改行でも入力欄以外のタップでもキーボードは消えなかった)
    - 設定 -> 読み上げ時の間の設定 -> 読み上げ時の間の詳細設定 (改行で消えなかった)

Version 1.1.41 (1.1.73)
- 内部データベースの保存場所を移動しました
  - 起動時に保存場所を確認して移動します。場合によっては
    - 起動時にやたら時間がかかる(ファイルコピーに時間がかかる？移動してるからそうはならないと思うけれども……)
    - データが全部吹き飛んだように見える
    事がありますのでその辺りを注意して確認してみてください。

Version 1.1.41 (1.1.72)
- 「読みの修正」でのテスト読み上げの時に「声質の設定」の標準設定を使うように変更
- 「読みの修正」での正規表現書き換え時に、書き換え先 $* を '\' でエスケープできるように
  - 1.1.71 までは "(あ)" を "\$1$1" と書き換えようとすると '\' によるエスケープがかからないため
    "\ああ" になっていたが、今回の修正で "\$1あ" になるようになった(はず)
    同様に、書き換え先が "\\$1$1" であれば、'\' がエスケープされて "\ああ" になる(はず)

Version 1.1.41 (1.1.71)
- 「読みの修正」で正規表現による読み替えができるように
  - 「読みの修正」を登録する時に正規表現が使えるようになります。
  - 正規表現を使用するか否かのON/OFFが追加されます。
  - この修正により影響の予想される項目は以下になります。
    1. 読みの修正の読み替え文字のリスト表示
      1.1. 読み替え設定の検索時の挙動
      1.2. 読み替え設定を削除した時の挙動
      1.3. 読み替え設定が追加された時の挙動
    2. 読みの修正を入力している部分の表示
    3. 再ダウンロード用データ(完全バックアップ・軽量バックアップどちらでも)の内容(読み替え辞書部分)
    4. 正規表現による読み替え
      - 正規表現は iOS で提供されている NSRegularExpression を使っています。
        https://developer.apple.com/documentation/foundation/nsregularexpression
      - NSRegularExpression で利用可能なメタキャラクタ、オペレータを利用可能になります。
        https://developer.apple.com/documentation/foundation/nsregularexpression#1965589
      - キャプチャした文字について、"$数字" による参照が可能です。
        - 例えば、"([0-9０１２３４５６７８９]+)mb" を "$1メガバイト" に読み替える設定を正規表現として登録すると、
          "1mb" を "いちめがばいと" と読み替えるようになったり、
          "([^\p{Han}])己" を "$1おのれ" と登録すると、"自己" は "じこ" のまま、
          "太郎は己の" を "たろうはおのれの" に読み替えるように指定できるようになります。



Version 1.1.40 (1.1.70)
- 「小説を読む時に背景を暗くする」がONになっているときに、小説本文のスクロールバーが見えなくなっていた問題を修正

Version 1.1.39 (1.1.69)
- 更新履歴の内容の更新のみ

Version 1.1.39 (1.1.68)
- 「設定」タブの「開発者に問い合わせる」内の「報告への返事」を「不要」「無くても良い」「必須」の選択式に変更

Version 1.1.39 (1.1.67)
- |...《...》 の形式のルビにおいて、｜(全角) には反応していなかった問題を修正
  - 問題の確認方法
    1. 「新規自作小説の追加」等で編集可能な本を作成する
    2. 「ルビはルビだけ読む」をONにする
    3. 1. で作った小説に、｜漢字ひらかな漢字《あいうえお》 といったような感じの、漢字とひらがなの混じった物へのルビ記法を書き込む
    4. その部分を読み上げさせてみて、ルビの部分だけが読まれる事を確認する(上記の例の場合、旧クライアントであれば「漢字ひらかなあいうえお」と読み上げられるが、新クライアントでは「あいうえお」となる)

Version 1.1.38 (1.1.66)
- 繰り返し再生時に、読み上げ位置が先頭に戻らない場合があった問題を修正
  - 問題の確認方法
    - ケース1(繰り返し再生:一つの章)：
      1. 任意の小説を開く
      2. 開いた章で読み上げを開始して、途中まで読んだ所で停止する(読み上げ位置が保存される)
      3. 設定タブで「繰り返し再生」を「一つの章」にする
      4. 再生を開始し、章の末尾まで読み上げた所でその章の最初に戻るか否かを確認する(不都合のあるバージョンでは2.で保存した位置に戻ってしまう)
    - ケース2(繰り返し再生:最初から)
      1. 複数の章のある小説を開く
      2. 1章に移動し、読み上げを開始して、途中まで読んだ所で停止する(その章の読み上げ位置が保存される)
      3. 設定タブで「繰り返し再生」を「最初から」にする
      4. 2章以降の章に移動し、再生を開始し、章の末尾まで読み上げた所で1章の最初に戻るか否かを確認する(不都合のあるバージョンでは2.で保存した位置に戻ってしまう)

Version 1.1.37 (1.1.65)
- 設定タブに「繰り返し再生」の項目を追加

Version 1.1.37 (1.1.64)
- アプリ内更新履歴を更新しそこなっていたのを修正

Version 1.1.37 (1.1.63)
- 「再ダウンロード用データの生成」で小説の本文を含むバックアップもできるように
- 対応読み込みファイルタイプに RTF(Rich Text Format) を追加
- 設定タブに「ことせかい について」(バージョン番号の確認)を追加

Version 1.1.37 (1.1.62)
- 「再ダウンロード用データの生成」で保存される設定項目を増加
